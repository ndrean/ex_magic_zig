searchData={"items":[{"type":"module","title":"ExMagicZig","doc":"Use `libmagic` in `Eixir` to identify file types and formats by analyzing file content and structure rather than relying on file extensions.","ref":"ExMagicZig.html"},{"type":"function","title":"ExMagicZig.from_buffer/2","doc":"Get the MIME type of a binary buffer.\n\n`resource` is a reference created by `new/0`.","ref":"ExMagicZig.html#from_buffer/2"},{"type":"function","title":"ExMagicZig.from_path/2","doc":"Get the MIME type of a file at `path`.\n\n`resource` is a reference created by `new/0`.","ref":"ExMagicZig.html#from_path/2"},{"type":"function","title":"ExMagicZig.new/0","doc":"NIF: Create a new `libmagic` resource.","ref":"ExMagicZig.html#new/0"},{"type":"function","title":"ExMagicZig.up/0","doc":"Checks if `libmagic` is installed and creates a new `libmagic` resource.\n\nUse the returned reference in calls to `from_path/2` and `from_buffer/2`.","ref":"ExMagicZig.html#up/0"},{"type":"function","title":"ExMagicZig.z_from_buffer/2","doc":"NIF: Get the MIME type of a binary buffer.\n\n `resource` is a reference created by `new/0`.\n\n Returns `{:ok, mime_type}` or `{:error, reason}`.","ref":"ExMagicZig.html#z_from_buffer/2"},{"type":"function","title":"ExMagicZig.z_from_path/2","doc":"NIF: Get the MIME type of a file at `path`.\n\n `resource` is a reference created by `new/0`.\n\n Returns `{:ok, mime_type}` or `{:error, reason}`.","ref":"ExMagicZig.html#z_from_path/2"},{"type":"module","title":"Signature","doc":"","ref":"Signature.html"},{"type":"function","title":"Signature.first_bytes/2","doc":"Get the first n bytes of a file for signature tests.","ref":"Signature.html#first_bytes/2"},{"type":"extras","title":"ExMagicZig","doc":"# ExMagicZig\n\nMinimal Elixir bindings to `libmagic` powered by the wonderful [Zigler](https://hexdocs.pm/zigler/readme.html) library with Zig v0.15.1.\n\n`libmagic` is a library that identifies file types and formats by analyzing file content and structure rather than relying on file extensions.\n\nIt's the engine behind the Unix file command and examines the actual bytes, headers, and internal structure of files to determine what type of data they contain (MIME types, file formats, encoding, etc.).\n\n[libmagic]((https://man7.org/linux/man-pages/man3/libmagic.3.html#LIBRARY)): copyright (c) Ian F. Darwin 1986-1995.\nLicense: BSD-2-Clause (see LICENSE-libmagic).","ref":"readme.html"},{"type":"extras","title":"Requirements - ExMagicZig","doc":"> [!WARNING]\n> Works on linux and OSX.\n\n`libmagic` must be installed:\n\n- macOS: `brew install libmagic`\n- Ubuntu/Debian: `apt install libmagic-dev`\n- Fedora: `dnf install file-devel`","ref":"readme.html#requirements"},{"type":"extras","title":"Installation - ExMagicZig","doc":"If [available in Hex](https://hex.pm/docs/publish), the package can be installed\nby adding `ex_magic_zig` to your list of dependencies in `mix.exs`:\n\n```elixir\ndef deps do\n  [\n    {:ex_magic_zig, \"~> 0.1.0\"}\n  ]\nend\n```\n\nDocumentation can be generated with [ExDoc](https://github.com/elixir-lang/ex_doc)\nand published on [HexDocs](https://hexdocs.pm). Once published, the docs can\nbe found at  .","ref":"readme.html#installation"},{"type":"extras","title":"Tests - ExMagicZig","doc":"```sh\nmix test --trace\n```","ref":"readme.html#tests"},{"type":"extras","title":"Usage - ExMagicZig","doc":"```elixir\n{:ok, magic} = ExMagicZig.up()\n\n{:ok, mime} = ExMagicZig.from_path(magic, \"my_img.png\")\n# {:ok, \"image/png\"}\n\n{:ok, binary} = File.read(\"my_img.jpg\")\n{:ok, mime} = ExMagicZig.from_binary(magic, binary)\n#{:ok, \"image/jpeg\"}\n```","ref":"readme.html#usage"}],"proglang":"elixir","content_type":"text/markdown","producer":{"name":"ex_doc","version":"0.38.4"}}